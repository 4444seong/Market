<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


 <mapper namespace="chattingMapper">
 	<!-- 룸쪽  -->
	<insert id="chat_insert" parameterType="com.market.chatting.ChattingRoomDTO">
		insert into ChattingRoom values(
		roomId_seq.nextval,#{userName},#{masterName},
		0, #{post_seq},sysdate,#{extraAddr}, '거래를 시작하세요!')
	</insert>
	<!-- insert전 중복확인 -->
	<select id="overlapping"  resultType="boolean">
		select count(*) from ChattingRoom 
			where userName = #{userName}
			and post_seq = #{post_seq}
	</select>
	<!-- 프로파일,채팅룸 불러오기  -->
	<select id="chat_mamberJoin" parameterType="String" resultType="org.apache.commons.collections4.map.CaseInsensitiveMap">
		select a.*, b.user_profile "user_profile_a" , c.user_profile "user_profile_b"
			from ChattingRoom a join tbl_member b
		on a.userName = b.user_nickname
			                    join tbl_member c
		on a.masterName = c.user_nickname
			where masterName = #{masterName} or userName = #{masterName}
		order by last_date desc
	</select>
	<!-- insert시 같이업테이트 -->
	<update id="roomUpdate" parameterType="com.market.chatting.ChattingMessageDTO">
		update ChattingRoom set 
		last_chat=#{message},last_date=sysdate where roomId=#{roomId}
	</update>
	<!-- 채팅방나가기 -->
	<delete id="chat_m_exit" parameterType="int">
		delete from ChattingRoom where roomId = #{roomId}
	</delete>
	
	<!-- 메세지 쪽 -->
	<select id="chat_m_select" parameterType="int" resultType="com.market.chatting.ChattingMessageDTO">
		select* from ChattingMessage 
			where roomId=#{roomId}
			order by upload_date
	</select>
	<insert id="chat_m_insert" parameterType="com.market.chatting.ChattingMessageDTO">
		insert into ChattingMessage values(
		#{roomId},#{messageId},#{message},#{name},
		1, 2,sysdate)
	</insert>
	
	
 </mapper>